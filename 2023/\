#include <fstream>
#include <iostream>
#include <map>
#include <sstream>
#include <unordered_map>
#include <vector>

using namespace std;

struct Games {
  string hand;
  int bid;
  int points;
  int strength;
};

int get_result(vector<Games> games) {
  int sum = 0;
  int ite = 1;

  for (int i = 0; i < games.size(); i++) {
    sum += games[i].bid * ite;
    ite++;
  }

  return sum;
}

void order(vector<Games> &games) {
  map<char, int> cards = {{2, 1},    {3, 2},    {4, 3},   {5, 4},   {6, 5},
                          {7, 6},    {8, 7},    {9, 7},   {'T', 9}, {'J', 10},
                          {'Q', 11}, {'K', 12}, {'A', 13}};

  for (int i = 1; i < games.size(); i++) {
    if (games[i - 1].points == games[i].points) {
      for (int j = 0; j < 5; j++) {
        cout << "Cards 1: " << cards[games[i - 1].hand[j]] << endl;
        cout << "Cards 2: " << cards[games[i].hand[j]] << endl;
        games[i - 1].strength = cards[games[i - 1].hand[j]];
        games[i].strength = cards[games[i].hand[j]];
        if (games[i - 1].strength > games[i].strength) {
          swap(games[i - 1], games[i]);
          i = 1;
          break;
        } else {
        }
      }
    } else if (games[i - 1].points > games[i].points) {
      swap(games[i - 1], games[i]);
    }
  }
}

int main() {
  fstream file("testinput7.txt");
  vector<string> lines;
  string words;
  vector<Games> game;
  int pairs = 0;
  vector<unordered_map<char, int>> count;

  while (getline(file, words)) {
    lines.push_back(words);
  }

  for (int i = 0; i < lines.size(); i++) {
    game.push_back(Games());

    istringstream iss(lines[i]);

    iss >> game[i].hand;
    iss >> game[i].bid;
  }

  // for (int i = 0; i < game.size(); i++) {
  //   cout << "Hand: " << game[i].hand << endl;
  //   cout << "Bid: " << game[i].bid << endl;
  // }

  for (int i = 0; i < game.size(); i++) {
    count.push_back(unordered_map<char, int>());
  }

  for (int j = 0; j < game.size(); j++) {
    for (int i = 0; i < game[j].hand.size(); i++) {
      count[j][game[j].hand[i]]++;
    }
    int counter = 0;
    for (auto it : count[j]) {
      if (it.second > 1) {
        // cout << it.first << ", count: " << it.second << endl;
      }
      switch (it.second) {
      case 2:
        game[j].points += 2;
        break;
      case 3:
        game[j].points += 5;
        break;
      case 4:
        game[j].points += 8;
        break;
      case 5:
        game[j].points += 9;
        break;
      default:
        break;
      }
    }
  }
  order(game);
  for (int i = 0; i < game.size(); i++) {
    cout << game[i].hand << " " << game[i].bid << endl;
    cout << "Points: " << game[i].points << endl;
    cout << "Strength: " << game[i].strength << endl;
  }
  int sum = get_result(game);
  cout << sum << endl;
}
